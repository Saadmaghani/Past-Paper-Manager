{"files":[{"id":"5c06a32c-ff1a-4dd1-8120-7ec9ccdd2f8b","name":"Code","type":"server_js","source":"/**\n * @OnlyCurrentDoc Limits the script to only accessing the current spreadsheet.\n */\n\nfunction onOpen(){\n  SpreadsheetApp.getUi() // Or DocumentApp or FormApp.\n      .createMenu(\u0027Macros\u0027)\n      .addItem(\u0027Create Paper Sheet\u0027,\u0027CPPS\u0027)\n      .addItem(\u0027Set Paper State\u0027, \u0027SPPS\u0027)\n      .addItem(\u0027Get Papers Done\u0027,\u0027GPD\u0027)\n      .addToUi();\n}\n\nfunction GPD(){\n var html \u003d HtmlService.createTemplateFromFile(\u0027GetPastPaperDone\u0027)\n      .evaluate()\n      .setSandboxMode(HtmlService.SandboxMode.IFRAME);\n  SpreadsheetApp.getUi() // Or DocumentApp or FormApp.\n      .showModalDialog(html, \u0027Get Completed Papers\u0027); \n  \n}\n\nfunction SPPS(){\n  var html \u003d HtmlService.createTemplateFromFile(\u0027SetPastPaperState\u0027)\n      .evaluate()\n      .setSandboxMode(HtmlService.SandboxMode.IFRAME);\n  SpreadsheetApp.getUi() // Or DocumentApp or FormApp.\n      .showModalDialog(html, \u0027Set Paper State\u0027);\n}\n\n\nfunction SPPSFormProcess(formObject){\n  var subj\u003d formObject.Subject;\n  var year \u003d formObject.Year;\n  var session \u003d formObject.Session;\n  var paper \u003d formObject.Paper;\n  var valType \u003d formObject.ValType;\n  if(valType\u003d\u003d\"custom\"){\n    var val \u003d formObject.StatusVal;\n  }else{\n    var val \u003d getTodayDate();\n  }\n  setPastPaperState(subj,year,session,paper,val);\n}\n\n\nfunction setPastPaperState(subject, year, session, paper, value){\n \n  var ss \u003d SpreadsheetApp.getActiveSpreadsheet();\n  var sheet \u003d ss.getActiveSheet();\n  var range \u003d sheet.getDataRange();\n  var numRows \u003d range.getValues();\n  \n  Logger.clear();\n  Logger.log(\"setPastPaperState running\");\n  var i \u003d0;\n  while(i\u003cnumRows.length ){\n    var val \u003d numRows[i][1];\n    if(val\u003d\u003dsubject){\n      Logger.log(\"FOUND \"+subject+\" ON \"+i);\n      break;\n    }\n    i++;\n  }\n  \n  var headerRow \u003d i; \n  \n  while(i\u003cnumRows.length){\n    var yearval \u003d numRows[i][1];\n    if(yearval \u003d\u003dyear){\n      Logger.log(\"FOUND \"+year+\" ON \"+i);\n      break;\n    }\n    i++;\n  }\n  \n  for(i;i\u003c\u003di+1;i++){\n    var sess \u003d numRows[i][2];\n    if(sess\u003d\u003dsession){\n      Logger.log(\"FOUND \"+session+\" ON \"+i);\n      break;\n    }\n  }\n  Logger.log(numRows[1].length);\n  var colNo\u003d3;\n  for(colNo; colNo \u003c numRows[1].length;colNo++){\n    var paperVal \u003d numRows[headerRow][colNo];\n    if(paperVal \u003d\u003d paper){\n      Logger.log(\"FOUND \"+paper+\" IN COLUMN \"+colNo);\n      break;\n    }\n  }\n  sheet.getRange(i+1,colNo+1).setValue(value); \n}\n\n/*\n * Completed Past Paper Functions\n */ \n\nfunction CPPFormProcess(formObject){\n Logger.clear();\n \n  var subj \u003d formObject.Subject;\n  var Y \u003d formObject.Year;\n  var Ps \u003d formObject.Papers;\n  var fromY;\n  var toY;\n  var papers;\n  if(Y\u003d\u003d\"partY\"){\n    var fromY \u003dformObject.FromYear;\n    var toY \u003dformObject.ToYear;\n  }\n  if(Ps\u003d\u003d\"partPs\"){\n    papers\u003d[];\n    var Psobj \u003d formObject.SelectedPs;\n   // Logger.log(Psobj);\n    \n    if(Object.prototype.toString.call(Psobj)\u003d\u003d\u003d\u0027[object Array]\u0027){\n      for(var x\u003d0;x\u003cformObject.SelectedPs.length;x++){\n        var val \u003d formObject.SelectedPs[x];\n        papers[x]\u003d val;\n      }\n    }else{\n      papers[0]\u003dPsobj;\n    }\n  }\n  return getCompletedPP(subj,fromY,toY,papers);\n}\n\n\n\nfunction getCompletedPP(subject, fromYear, toYear, papers){\n  var ss \u003d SpreadsheetApp.getActiveSpreadsheet();\n  var sheet \u003d ss.getActiveSheet();\n  var range \u003d sheet.getDataRange();\n  var numRows \u003d range.getValues();\n  \n  Logger.log(\"getCompletedPP running\");\n  var i \u003d0;\n  while(i\u003cnumRows.length ){\n    var val \u003d numRows[i][1];\n    if(val\u003d\u003dsubject){\n      Logger.log(\"FOUND \"+subject+\" ON \"+i);\n      break;\n    }\n    i++;\n  }\n  \n  var headerRow \u003d i;\n  Logger.log(headerRow);\n  if (typeof fromYear \u003d\u003d\u003d \u0027undefined\u0027) {\n   // Logger.log(\"cp1\");\n    i++;\n    while(i\u003cnumRows.length){\n      var yearval \u003d numRows[i][1];\n      //Logger.log(yearval+\" i:\"+i);\n      if( typeof fromYear\u003d\u003d\u003d\u0027undefined\u0027 \u0026\u0026 parseInt(yearval.toString())\u003e1){\n        fromYear \u003d i;\n      }\n      \n      if(typeof toYear \u003d\u003d\u003d\u0027undefined\u0027 \u0026\u0026 !(parseInt(yearval.toString())\u003e1) \u0026\u0026 !(parseInt(numRows[i+1][1].toString())\u003e1)){\n        toYear \u003di;\n      }\n      i++;\n    }\n  }else{\n    toYear \u003d toYear;\n    fromYear \u003d fromYear;\n    while(i\u003cnumRows.length){\n    var yearval \u003d numRows[i][1];\n    if(yearval \u003d\u003dfromYear){\n      Logger.log(\"fromYear on \"+i);\n      fromYear \u003d i;\n    }\n    if(yearval\u003d\u003dtoYear){\n      Logger.log(\"toYear on \"+i+1);\n      toYear \u003di+1;\n    }\n    i++;\n    }\n  }\n  var paperCols\u003d[[]];\n  if(typeof papers \u003d\u003d\u003d \u0027undefined\u0027){\n    var colNo\u003d3;\n    var pos \u003d0;\n    for(colNo; colNo \u003c numRows[1].length;colNo++){\n      var paperVal \u003d numRows[headerRow][colNo];\n      Logger.log(paperVal+\" colNo:\"+colNo);\n      if(paperVal.toString() \u003d\u003d \u0027\u0027){\n       // Logger.log(\"NOT FOUND PAPER IN COLUMN \"+colNo);\n        break;\n      }else{\n        paperCols[0][pos]\u003dcolNo;\n        pos++;\n      }\n    }\n  }else{\n    var noOfPapers \u003d papers.length;\n     paperCols \u003d Create2DArray(noOfPapers);\n    Logger.log(\"cp2\");\n    for(var i \u003d0; i\u003cnoOfPapers;i++){\n      var colNo\u003d3;\n      var pos \u003d0;\n      for(colNo;colNo\u003cnumRows[1].length;colNo++){\n        var paperVal \u003d numRows[headerRow][colNo];\n        if(paperVal.toString().indexOf(papers[i])\u003e-1){\n          //Logger.log(\"cp3\");\n          paperCols[i][pos]\u003dcolNo;\n          //Logger.log( paperCols[i][pos]);\n          pos++;\n        }\n      }\n    }\n  }\n  \n  \n  Logger.log(\"fromyear:\"+fromYear+\" toyear:\"+toYear);\n  Logger.log(\"paperCols[i][j]\");\n  for(var i \u003d0; i\u003cpaperCols.length;i++){\n    for(var j\u003d0;j\u003cpaperCols[i].length;j++){\n      Logger.log(\"[\"+i+\"][\"+paperCols[i][j]+\"]\");\n    }\n  }\n  var totalPapers \u003d0;\n  var TPNotDone\u003d0;\n  Logger.log(paperCols.length);\n  for(var f\u003d0;f\u003cpaperCols.length;f++){\n    var bgRange \u003d sheet.getRange(fromYear+1, paperCols[f][0]+1, toYear-fromYear+1, paperCols[f][paperCols[f].length-1]-paperCols[f][0]+1);\n    var bgColors \u003d bgRange.getBackgrounds();\n    var bgVals \u003d bgRange.getValues();\n    for (var i in bgColors) { //i \u003d row\n     for (var j in bgColors[i]) { //j \u003d col\n       //Logger.log(bgColors[i][j] + \" i:\"+i+\" j:\"+j+\" val:\"+bgVals[i][j]);\n       var cellVal \u003d bgVals[i][j].toString();\n       if(bgColors[i][j] \u003d\u003d \"#00ffff\" \u0026\u0026 cellVal!\u003d\"X\"){\n         totalPapers++;\n         if(cellVal\u003d\u003d\"\" || cellVal \u003d\u003d \"-\"){\n           TPNotDone++;\n         }\n       }\n     }\n   }\n  }\n   var TPDone \u003d totalPapers -TPNotDone;\n   \n   var result \u003d \"total number of papers for \"+subject+\" \u003d \"+totalPapers+\". total number of papers done \u003d \"+TPDone+\". Papers left \u003d \"+TPNotDone;\n   Logger.log(result);\n   return result;\n}\n\n\nfunction test11(){\n\n}\n\n/*\n * Helper Functions\n */\n\nfunction getPapersOfSubject(subject){\n  var ss \u003d SpreadsheetApp.getActiveSpreadsheet();\n  var sheet \u003d ss.getActiveSheet();\n  var range \u003d sheet.getDataRange();\n  var numRows \u003d range.getValues();\n  \n  Logger.log(\"getPaperOfSuject running\");\n  var i \u003d0;\n  while(i\u003cnumRows.length ){\n    var val \u003d numRows[i][1];\n    if(val\u003d\u003dsubject){\n      //Logger.log(\"FOUND \"+subject+\" ON \"+i);\n      break;\n    }\n    i++;\n  }\n  \n  var headerRow \u003d i;\n  var papers\u003d[];\n  var pointer \u003d0;\n  var colNo\u003d3;\n  for(colNo;colNo\u003cnumRows[1].length;colNo++){\n    var paperVal \u003d numRows[headerRow-1][colNo];\n    //Logger.log(paperVal);\n    if(paperVal!\u003d\"\"){\n      papers[pointer]\u003dpaperVal;\n      pointer++\n    }else{\n      if(colNo+2 \u003d\u003dnumRows[1].length || (numRows[headerRow-1][colNo+2]\u003d\u003d\u003d\"\" \u0026\u0026 numRows[headerRow-1][colNo+1]\u003d\u003d\u003d\"\")){\n        break;\n      }\n    }\n  }\n  for(var i \u003d0; i\u003cpapers.length;i++){\n      Logger.log(papers[i]);\n  }\n  \n  return papers;\n}\n\nfunction Create2DArray(rows) {\n  var arr \u003d [];\n\n  for (var i\u003d0;i\u003crows;i++) {\n     arr[i] \u003d [];\n  }\n\n  return arr;\n}\n\nfunction include(filename) {\n  return HtmlService.createTemplateFromFile(filename).getRawContent();\n}\n\nfunction getSubjects() {\n  \n  var ss \u003d SpreadsheetApp.getActiveSpreadsheet();\n  var sheet \u003d ss.getActiveSheet();\n  var range \u003d sheet.getDataRange();\n  var numRows \u003d range.getValues();\n  \n  var subjects \u003d[];\n  var pointer\u003d0;\n  for(var i\u003d0; i\u003cnumRows.length;i++){\n    var val \u003dnumRows[i][1];\n    if(val.toString().match(/[a-z]/i)){\n      Logger.log(val + \" contains letters!\");\n      subjects[pointer]\u003dval;\n      pointer++;\n    }\n  }\n  for(var i\u003d0;i\u003csubjects.length;i++){\n    Logger.log(subjects[i]);\n  }\n  return subjects;\n  \n}\n\nfunction getTodayDate(){\n  \n  var today \u003d new Date();\n  var dd \u003d today.getDate();\n  var mm \u003d today.getMonth()+1; //January is 0!\n  var yyyy \u003d today.getFullYear();\n  \n  if(dd\u003c10) {\n    dd\u003d\u00270\u0027+dd\n  } \n  \n  if(mm\u003c10) {\n    mm\u003d\u00270\u0027+mm\n  } \n  \n  today \u003d dd+\u0027/\u0027+mm+\u0027/\u0027+yyyy;\n  return today;\n}\n\n\n\n"},{"id":"2661f6ba-484b-4047-baea-75ba68ddd3ed","name":"PastPaperMaker","type":"server_js","source":"/**\n * @OnlyCurrentDoc Limits the script to only accessing the current spreadsheet.\n */\n\n\nvar BLUE_HEX\u003d \"#00ffff\";\nvar GREEN_HEX\u003d \"#00ff00\";\nvar WHITE_HEX\u003d\"#ffffff\";\n\n\nfunction CPPS(){\n var html \u003d HtmlService.createTemplateFromFile(\u0027SheetMakerForm\u0027)\n      .evaluate()\n      .setSandboxMode(HtmlService.SandboxMode.IFRAME);\n  SpreadsheetApp.getUi() // Or DocumentApp or FormApp.\n      .showModalDialog(html, \u0027Paper Sheet Maker\u0027); \n}\n\n\nfunction createPPTable(formObject){\n  Logger.log(formObject);\n  \n  var ss \u003d SpreadsheetApp.getActiveSpreadsheet();\n  var newOrOldSheet \u003d formObject.sheetType;\n  \n  if(newOrOldSheet \u003d\u003d\"newSheet\"){\n  \n    var name \u003d formObject.sheetName;\n    var sheet \u003d ss.insertSheet(name);\n    \n  }else if(newOrOldSheet\u003d\u003d\"curSheet\"){\n    var sheet \u003d ss.getActiveSheet();\n  }\n\n  \n  var Subjectzz \u003d formObject.Subject;\n  var fromYearzz \u003d formObject.fromY;\n  var toYearzz \u003d formObject.toY;\n \n  if(Object.prototype.toString.call(Subjectzz)\u003d\u003d\u003d\u0027[object Array]\u0027){\n    Logger.log(Subjectzz.length);\n    for(var r\u003d0;r\u003cSubjectzz.length;r++){\n      var paperStr \u003d formObject.papers[r];\n      var paperzz \u003d paperStr.split(\u0027 \u0027);\n      Logger.log(Subjectzz[r]+\" \"+fromYearzz[r]+\" \"+toYearzz[r]+\" \"+paperzz+\" \"+sheet);\n      createTable(Subjectzz[r],parseInt(fromYearzz[r]),parseInt(toYearzz[r]),paperzz,sheet);\n    }\n  }else{\n    var paperzz \u003d formObject.papers.split(\u0027 \u0027);\n    Logger.log(Subjectzz+\" \"+parseInt(fromYearzz)+\" \"+parseInt(toYearzz)+\" \"+paperzz+\" \"+sheet);\n    createTable(Subjectzz,parseInt(fromYearzz),parseInt(toYearzz),paperzz,sheet);\n  }\n}\n\nfunction createTable(subject,fromYear,tillYear,papers,sheet){\n  var sheet \u003d sheet;\n  \n  var startRow;\n \n  var range \u003d sheet.getDataRange();\n  var values \u003d range.getValues();\n  //check if sheet empty\n  if(values.length\u003c2){\n    Logger.log(\"sheet empty\");\n    startRow \u003d1;\n  }else{\n    Logger.log(\"sheet not empty\");\n    var bgRange \u003drange.getBackgrounds();\n    startRow\u003d bgRange.length+2;\n  }\n  var noRows \u003d (tillYear - fromYear +1) *2 +2;\n  Logger.log(noRows);\n  \n  var noCols \u003d papers.length *3 +2;\n  Logger.log(noCols);\n  \n  var tableRange \u003d sheet.getRange(startRow+1, 2, noRows, noCols);\n  \n  //sets borders\n  tableRange.setBorder(true, true, true, true, true, true); \n  tableRange.offset(0,0,1,2).setBorder(false,false,null,null,false,false);\n \n //setting colours\n paintTable(tableRange,1,0,noRows-1,2,GREEN_HEX);\n paintTable(tableRange,0,2,2,noCols-2,GREEN_HEX);\n paintTable(tableRange,2,2,noRows-2,noCols-2,BLUE_HEX);\n \n //paintTable(tableRange,1,0,noRows-1,2,GREEN_HEX); both will happen later\n //paintTable(tableRange,1,0,noRows-1,2,GREEN_HEX);\n Logger.log(fromYear);\n //merging and printing papers and years\n for(var i \u003d0;i\u003c(tillYear - fromYear +1);i++){\n   var pos \u003d (i*2)+2;\n   var newR \u003d tableRange.offset(pos, 0, 2,1);\n   newR.merge();\n   var year \u003d fromYear +i;\n   Logger.log(year);\n   newR.setValue(year);\n   newR.setHorizontalAlignment(\"right\");\n }\n for(var i\u003d0; i\u003cpapers.length;i++){\n   var pos \u003d (i*3)+2;\n   var newR \u003d tableRange.offset(0, pos, 1, 3);\n   newR.merge();\n   newR.setValue(papers[i]);\n   newR.setHorizontalAlignment(\"center\");\n }\n \n //setting headers\n for(var i\u003d0; i\u003cnoCols;i++){\n   var newR \u003d tableRange.offset(1, i,1,1);\n   var val;\n   switch(i){\n     case 0:\n       val \u003dsubject;\n       break;\n     case 1:\n       val\u003d\"Month\";\n       break;\n     default:\n       var item \u003d (i+1)%3;\n       var pre \u003d tableRange.offset(0, i-item ,1,1).getValue();\n       switch(item){\n         case 0:\n           val\u003dpre +\"-1\";\n           break;\n         case 1:\n           val\u003dpre +\"-2\";\n           break;\n         case 2:\n           val\u003dpre +\"-3\";\n           break;\n       }\n   }\n   newR.setValue(val);\n }\n \n //setting sessions\n for(var i\u003d2; i\u003cnoRows;i++){\n   var item \u003di%2;\n   var val;\n   if(item\u003d\u003d0){\n     val\u003d\"Summer\";\n   }else{\n     val\u003d\"Winter\";\n   }\n   tableRange.offset(i, 1,1,1).setValue(val);\n }\n \n //setting white/blank X spaces\n for(var i\u003d0; i\u003cpapers.length;i++){\n   var paperVal \u003d papers[i];\n   var pos \u003d find(tableRange,1,0,1,noCols,paperVal+\"-2\",false);\n   if(tillYear\u003e 2009){\n     var rowss \u003d (2009-fromYear)*2;\n     paintTable(tableRange,2,pos[1],rowss,2,WHITE_HEX,\"X\");\n   }else{\n     paintTable(tableRange,2,pos[1],noRows-2,2,WHITE_HEX,\"X\");\n   }\n }\n}\n\nfunction test(){\n  var ss \u003d SpreadsheetApp.getActiveSpreadsheet();\n  var sheet \u003d ss.getActiveSheet();\n  Logger.log(sheet.getIndex());\n\n}\n\n/*\n * Helper Functions NOTE: ALL OF THEM ARE ZERO BASED INDEX (except for the number of rows/columns ie noRows/noCols)\n */\n\nfunction paintTable(range,startRow,startCol,numRows,numCols,color,val){\n  var newRange \u003d range.offset(startRow,startCol,numRows,numCols);\n  newRange.setBackground(color);\n  \n  if(typeof val!\u003d\u003d\u0027undefined\u0027){\n    for(var i\u003d0;i\u003cnumRows;i++){\n      for(var j\u003d0;j\u003cnumCols;j++){\n        newRange.offset(i,j,1,1).setValue(val);\n      }\n    }\n  }\n\n}\n//if contains \nfunction find(range, row, col, noRows, noCols, stringToFind,wholeword){\n  for(var i\u003drow; i\u003c (noRows+row) ;i++){\n    for(var j\u003dcol;j\u003c (noCols+col);j++){\n      var val \u003d range.offset(i,j,1,1).getValues();\n      //Logger.log(val);\n      if(wholeword\u003d\u003dtrue){\n        if(val\u003d\u003dstringToFind){\n          var ary \u003d [i,j];\n          Logger.log(\"found\");\n          return ary;\n        }\n      }else{\n        if(val.toString().indexOf(stringToFind)\u003e-1){\n          var ary \u003d [i,j];\n          return ary;\n        }\n      }\n    }\n  }\n}\n"},{"id":"7c87fab3-f405-4890-b575-5c9b58c7078d","name":"SetPastPaperState","type":"html","source":"\u003c?!\u003d include(\u0027mystyles\u0027); ?\u003e\n\u003c?!\u003d include(\u0027myfunctions\u0027); ?\u003e\n\u003clink rel\u003d\"stylesheet\" href\u003d\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"\u003e\n\u003cscript src\u003d\"//code.jquery.com/jquery-1.10.2.js\"\u003e\u003c/script\u003e\n\u003cscript src\u003d\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"\u003e\u003c/script\u003e\n\u003clink rel\u003d\"stylesheet\" href\u003d\"/resources/demos/style.css\"\u003e\n\u003cscript onload\u003d\"google.script.run.withSuccessHandler(fillSubjects).getSubjects()\"\u003e\n  \n\u003c/script\u003e\n\n\u003cform id\u003d\"SPPSForm\"\u003e\n  \u003cdiv\u003e\n  \u003clabel for\u003d\"Subject\"\u003eSubject: \u003c/label\u003e\u003cinput id\u003d\"tags\" type\u003d\"text\" name\u003d\"Subject\" autofocus/\u003e \u003cbr/\u003e\n  \u003clabel for\u003d\"Year\"\u003eYear:\u003c/label\u003e \u003cinput type\u003d\"text\" name\u003d\"Year\" size\u003d\"4\" maxlength\u003d\"4\" /\u003e\n  \u003clabel for\u003d\"Session\"\u003eSession: \u003c/label\u003e\u003cinput type\u003d\"text\" name\u003d\"Session\" size\u003d\"6\" maxlength\u003d\"6\" /\u003e\n  \u003clabel for\u003d\"Paper\"\u003ePaper:\u003c/label\u003e \u003cinput type\u003d\"text\" name\u003d\"Paper\" size\u003d\"5\" maxlength\u003d\"5\" /\u003e\u003cbr/\u003e\n  \u003c/div\u003e\n  \u003cdiv\u003e\n  \u003clabel\u003eCustom Status:\u003c/label\u003e\u003cinput type\u003d\"radio\" name\u003d\"ValType\" value\u003d\"custom\" onfocus\u003d\"ChangeDisableState(\u0027status\u0027,false)\" checked /\u003e\n    \u003clabel\u003eor Todays Date:\u003c/label\u003e\u003cinput type\u003d\"radio\" name\u003d\"ValType\" value\u003d\"date\" onfocus\u003d\"ChangeDisableState(\u0027status\u0027,true)\" /\u003e \u003cbr/\u003e\n  \u003clabel for\u003d\"Val\"\u003eStatus: \u003c/label\u003e\u003cinput type\u003d\"text\" name\u003d\"StatusVal\"id\u003d\"status\" /\u003e\u003cbr/\u003e\u003c/div\u003e\n  \u003cinput type\u003d\"button\" value\u003d\"Submit\" onclick\u003d\"google.script.run.SPPSFormProcess(this.parentNode);\n  google.script.host.close()\" /\u003e\n\u003c/form\u003e\n"},{"id":"0fed9016-8223-4336-81d4-c5b8ff7d64c0","name":"GetPastPaperDone","type":"html","source":"\u003c?!\u003d include(\u0027mystyles\u0027); ?\u003e\n\u003c?!\u003d include(\u0027myfunctions\u0027); ?\u003e\n\n\u003cstyle\u003e\n#output{\n  border:none;\n}\n\u003c/style\u003e\n\n\u003cform id\u003d\"GPPDForm\"\u003e\n  \u003clabel for\u003d\"Subject\"\u003eSubject:\u003c/label\u003e \u003cinput type\u003d\"text\" name\u003d\"Subject\" id\u003d\"subj\" autofocus /\u003e \u003cbr/\u003e\n  \u003cinput type\u003d\"radio\" name\u003d\"Year\" value\u003d\"allY\" onfocus\u003d\"ChangeDisableState(\u0027PartYearDIV\u0027,true)\" checked \u003d\"true\" /\u003e\u003clabel\u003eAll years \u003c/label\u003e \u003cbr/\u003e\n  \u003cinput type\u003d\"radio\" name\u003d\"Year\" value\u003d \"partY\" onfocus \u003d\"ChangeDisableState(\u0027PartYearDIV\u0027,false)\" /\u003e\u003clabel\u003eParticular years\u003c/label\u003e\u003cbr/\u003e \n  \u003cdiv id\u003d\"PartYearDIV\"\u003e\n    \u003clabel for\u003d\"FromYear\"\u003eFrom year:\u003c/label\u003e\u003cinput type\u003d\"text\" name\u003d\"FromYear\" size\u003d\"4\" maxlength\u003d\"4\" /\u003e\n    \u003clabel for\u003d\"ToYear\"\u003eTo Year:\u003c/label\u003e\u003cinput type\u003d\"text\" name\u003d\"ToYear\" size\u003d\"4\" maxlength\u003d\"4\" /\u003e \u003cbr/\u003e\n  \u003c/div\u003e\n  \u003cinput type\u003d\"radio\" name\u003d\"Papers\" value\u003d\"allPs\" onfocus\u003d\"ChangeDisableState(\u0027PartPapersDIV\u0027,true)\"  checked\u003d\"true\"/\u003e\u003clabel\u003eAll papers\u003c/label\u003e\u003cbr/\u003e\n  \u003cinput type\u003d\"radio\" name\u003d\"Papers\" value\u003d \"partPs\" onfocus\u003d\"google.script.run\n  .withSuccessHandler(updateSelect)\n  .getPapersOfSubject(subj.value); ChangeDisableState(\u0027PartPapersDIV\u0027,false) \"/\u003e\u003clabel\u003eParticular papers\u003c/label\u003e\u003cbr/\u003e \n \n  \u003cdiv id\u003d\"PartPapersDIV\"\u003e\n  \u003cselect name\u003d\"SelectedPs\" id\u003d\"selectPs\" multiple\u003e\n  \u003c/select\u003e\n  \u003c/div\u003e\n\n  \u003cinput type\u003d\"button\" value\u003d\"Submit\" onclick\u003d\"google.script.run\n  .withSuccessHandler(updateOutput)\n  .CPPFormProcess(this.parentNode)\"\n   /\u003e\n\u003c/form\u003e\n\n\u003cdiv id\u003d\"output\"\u003e \u003c/div\u003e\n\n\n\u003clink rel\u003d\"stylesheet\" href\u003d\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\"\u003e\n\u003cscript src\u003d\"//code.jquery.com/jquery-1.10.2.js\"\u003e\u003c/script\u003e\n\u003cscript src\u003d\"//code.jquery.com/ui/1.11.4/jquery-ui.js\"\u003e\u003c/script\u003e\n\u003clink rel\u003d\"stylesheet\" href\u003d\"/resources/demos/style.css\"\u003e\n\n\u003cscript onload\u003d\"google.script.run.withSuccessHandler(fillSubjects).getSubjects()\"\u003e\n  \n  $(function(){\n    ChangeDisableState(\u0027PartYearDIV\u0027,true);\n  });\n\n  function updateOutput(msg) {\n    var div \u003d document.getElementById(\u0027output\u0027);\n    div.innerHTML \u003d msg;\n  }\n  function updateSelect(papers){\n    \n    var Sel \u003d document.getElementById(\u0027selectPs\u0027);\n    for(var i\u003dSel.options.length-1;i\u003e\u003d0;i--){\n        Sel.remove(i);\n    }\n    for(var i \u003d0; i\u003cpapers.length;i++){\n      addOption(Sel,papers[i]);\n    }\n    \n  }\n  function addOption(select, val){\n  var option \u003d document.createElement(\u0027option\u0027);\n  option.text\u003dval;\n  option.value\u003dval;\n  select.add(option);\n  }\n\u003c/script\u003e\n"},{"id":"b0836e89-654d-430a-9e0e-0f1fc08c6a0e","name":"SheetMakerForm","type":"html","source":"\u003c?!\u003d include(\u0027mystyles\u0027); ?\u003e\n\n\u003cform id\u003d\"SMF\"\u003e\n\u003cinput type\u003d\"radio\" name\u003d\"sheetType\" value\u003d\"curSheet\"  /\u003eCreate in Current Sheet\n\u003cinput type\u003d\"radio\" name\u003d\"sheetType\" value\u003d\"newSheet\" onfocus\u003d\"enterSheetName()\" /\u003eCreate in New Sheet\u003cbr id\u003d\"radioBr\"/\u003e\n\n\u003cinput type\u003d\"button\" id\u003d\"addSubj\" value\u003d\"Add Subject Table\" onclick\u003d\"addSubject()\" /\u003e\n\u003cinput type\u003d\"button\"  value\u003d\"Submit\" onclick\u003d\"google.script.run.createPPTable(this.parentNode);\ngoogle.script.host.close()\" /\u003e\n\n\u003c/form\u003e\n\u003cscript\u003e\nvar subjectCount \u003d0;\nfunction addSubject(){\n  var DynDiv \u003d document.createElement(\u0027div\u0027);\n  DynDiv.id\u003d\"div\"+subjectCount;\n  var lbl \u003d document.createElement(\u0027label\u0027);\n  lbl.appendChild(document.createTextNode(\u0027Subject:\u0027));\n  \n  var inp \u003d document.createElement(\u0027input\u0027);\n  inp.type\u003d\"text\";\n  inp.name\u003d\"Subject\";\n  var br \u003d document.createElement(\u0027br\u0027);\n  \n  DynDiv.appendChild(lbl);\n  DynDiv.appendChild(inp);\n  DynDiv.appendChild(br);\n  \n  var lbl \u003d document.createElement(\u0027label\u0027);\n  var inp \u003ddocument.createElement(\u0027input\u0027);\n  lbl.appendChild(document.createTextNode(\u0027From Year:\u0027));\n  inp.name\u003d\"fromY\";\n  inp.maxLength\u003d\"4\";\n  inp.type\u003d\"text\";\n  inp.size\u003d\"4\";\n  DynDiv.appendChild(lbl);\n  DynDiv.appendChild(inp);\n  \n  var lbl \u003d document.createElement(\u0027label\u0027);\n  var inp \u003ddocument.createElement(\u0027input\u0027);\n  var br \u003d document.createElement(\u0027br\u0027);\n  lbl.appendChild(document.createTextNode(\u0027Till Year:\u0027));\n  inp.name\u003d\"toY\";\n  inp.type\u003d\"text\";\n  inp.size\u003d\"4\";\n  inp.maxLength\u003d\"4\";\n  DynDiv.appendChild(lbl);\n  DynDiv.appendChild(inp);\n  DynDiv.appendChild(br);\n  \n  var lbl \u003d document.createElement(\u0027label\u0027);\n  var inp \u003ddocument.createElement(\u0027input\u0027);\n  lbl.appendChild(document.createTextNode(\u0027Papers:\u0027));\n  inp.name\u003d\"papers\";\n  inp.type\u003d\"text\";\n  inp.size\u003d\"15\";\n  DynDiv.appendChild(lbl);\n  DynDiv.appendChild(inp);\n  var lbl \u003d document.createElement(\u0027label\u0027);\n  var txt \u003d document.createElement(\u0027b\u0027);\n  txt.innerHTML \u003d \"(Separate papers using spaces ONLY)\";\n  lbl.appendChild(txt);\n  DynDiv.appendChild(lbl);\n  \n  \n  var addBtn \u003d document.getElementById(\"addSubj\");\n  \n  document.getElementById(\"SMF\").insertBefore(DynDiv, addBtn);\n  subjectCount++;\n}\n\nfunction enterSheetName(){\n  if(document.getElementsByName(\u0027sheetName\u0027).length \u003c\u003d0){\n    var inp \u003d document.createElement(\u0027input\u0027);\n    var lbl \u003d document.createElement(\u0027label\u0027);\n    inp.name\u003d\"sheetName\";\n    inp.type\u003d\"text\";\n    lbl.appendChild(document.createTextNode(\u0027Sheet Name:\u0027));\n    var br \u003d document.getElementById(\u0027radioBr\u0027);\n    insertAfter(br,lbl);\n    insertAfter(lbl,inp);\n  }  \n}\n\n\nfunction insertAfter(referenceNode, newNode) {\n  referenceNode.parentNode.insertBefore(newNode,referenceNode.nextSibling);\n}\n\n\u003c/script\u003e\n\n"},{"id":"4e9fa6d4-5f79-4b1a-a53d-e5db9494f31d","name":"mystyles","type":"html","source":"\u003cstyle\u003e\n\n label,input {\n    margin: 5px;\n  }\n  div{\n    border-width: 1px;\n    border-style: solid;\n    margin:5px;\n  }\n  \n\u003c/style\u003e\n"},{"id":"d6409a27-02d6-46bd-8d8f-f174023d46f4","name":"myfunctions","type":"html","source":"\u003cscript\u003e\n\n  function ChangeDisableState(id,state){\n    var element \u003d document.getElementById(id);\n    if(element.tagName\u003d\u003d\"DIV\"){\n      $(\u0027#\u0027+id+\u0027 :input\u0027).attr(\u0027disabled\u0027, state);\n    }else{\n      $(\u0027#\u0027+id).attr(\u0027disabled\u0027, state);\n    }\n  }\n  \n  function fillSubjects(subjAry){\n    var availableTags\u003dsubjAry;\n    $( \"input[name\u003dSubject]\" ).autocomplete({\n      source: availableTags\n      });\n  }\n\u003c/script\u003e"},{"id":"41fb1584-677a-4340-8173-1edeb95ba472","name":"Statistics","type":"server_js","source":"function makeChart() {\n   var data \u003d Charts.newDataTable()\n       .addColumn(Charts.ColumnType.STRING, \"Month\")\n       .addColumn(Charts.ColumnType.NUMBER, \"In Store\")\n       .addColumn(Charts.ColumnType.NUMBER, \"Online\")\n       .addRow([\"January\", 10, 1])\n       .addRow([\"February\", 12, 1])\n       .addRow([\"March\", 20, 2])\n       .addRow([\"April\", 25, 3])\n       .addRow([\"May\", 30, 4])\n       .build();\n\n   var chart1\u003d Charts.newAreaChart()\n       .setDataTable(data)\n       .setStacked()\n       .setRange(0, 40)\n       .setTitle(\"Sales per Month\")\n       .build();\n\n   var sheet \u003d SpreadsheetApp.getActiveSheet();\n   sheet.insertChart(chart1);\n }\n "}]}